// components/layout.go

package components

templ NodeDashboard() {
	<script src="/static/js/tailwind-3.4.5.js"></script>
	<script src="/static/js/htmx.min.js"></script>
	<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
	@TailwindConfig()
	<style>
    @import "/static/css/globals.css";
    </style>
	<div class="flex min-h-screen flex-col bg-muted/40">
		@Navbar()
		<main class="flex-1 p-4 sm:p-6">
			<div class="grid gap-6 lg:grid-cols-[1fr_300px]">
				<div>
					<div class="grid gap-6">
						@ServerOverview()
						@DependenciesTable()
					</div>
				</div>
				<div class="grid gap-6">
					@ServerDetails()
					@MonitoringCard()
				</div>
			</div>
		</main>
	</div>
}

templ Navbar() {
	<header class="sticky top-0 z-30 flex h-14 items-center gap-4 border-b bg-background px-4 sm:h-16 sm:px-6">
		@NavbarBrand()
		<div class="ml-auto flex items-center gap-2">
			@IconButton("More")
		</div>
	</header>
}

templ NavbarBrand() {
	<a class="flex items-center gap-2 font-semibold" href="#">
		@Icon("server")
		<span>Acme Server</span>
	</a>
}

templ TailwindConfig() {
	<script>
    tailwind.config = {
        theme: {
            extend: {
                colors: {
                    border: 'hsl(var(--border))',
                    input: 'hsl(var(--input))',
                    ring: 'hsl(var(--ring))',
                    background: 'hsl(var(--background))',
                    foreground: 'hsl(var(--foreground))',
                    primary: {
                        DEFAULT: 'hsl(var(--primary))',
                        foreground: 'hsl(var(--primary-foreground))'
                    },
                    secondary: {
                        DEFAULT: 'hsl(var(--secondary))',
                        foreground: 'hsl(var(--secondary-foreground))'
                    },
                    destructive: {
                        DEFAULT: 'hsl(var(--destructive))',
                        foreground: 'hsl(var(--destructive-foreground))'
                    },
                    muted: {
                        DEFAULT: 'hsl(var(--muted))',
                        foreground: 'hsl(var(--muted-foreground))'
                    },
                    accent: {
                        DEFAULT: 'hsl(var(--accent))',
                        foreground: 'hsl(var(--accent-foreground))'
                    },
                    popover: {
                        DEFAULT: 'hsl(var(--popover))',
                        foreground: 'hsl(var(--popover-foreground))'
                    },
                    card: {
                        DEFAULT: 'hsl(var(--card))',
                        foreground: 'hsl(var(--card-foreground))'
                    },
                },
                borderRadius: {
                    xl: `calc(var(--radius) + 4px)`,
                    lg: `var(--radius)`,
                    md: `calc(var(--radius) - 2px)`,
                    sm: `calc(var(--radius) - 4px)`
                },
                keyframes: {
                    "accordion-down": {
                        from: {height: 0},
                        to: {height: "var(--radix-accordion-content-height)"}
                    },
                    "accordion-up": {
                        from: {height: "var(--radix-accordion-content-height)"},
                        to: {height: 0}
                    }
                },
                animation: {
                    "accordion-down": "accordion-down 0.2s ease-out",
                    "accordion-up": "accordion-up 0.2s ease-out"
                },
            },
        },
    };
</script>
}
